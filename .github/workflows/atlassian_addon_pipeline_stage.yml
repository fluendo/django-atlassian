# This workflow uses actions that are not certified by GitHub.
# Estas las proporcionan entidades terceras y las gobiernan
# condiciones de servicio, políticas de privacidad y documentación de soporte
# documentación.

name: Deploy to Amazon ECS Atlassian_Addon Service

on:
  push: 
    tags:
      - 'stage*'

env:
  AWS_REGION: us-east-1                   
  ECR_REPOSITORY: 589180693493.dkr.ecr.us-east-1.amazonaws.com         
  ECS_SERVICE: atlassian-addon-stage                 
  ECS_CLUSTER: fluendowebcluster              
  ECS_TASK_DEFINITION: ecs_task_definition_atlassianaddon_stage.json
  ECS_PROEJCT: atlassian_addon 
  CONTAINER_NAME_APP: app       
  CONTAINER_NAME_REDIS: redis
  ECR_REGISTRY: "atlassian_addon"
  IMAGE_TAG: "stage"
  ECR_REPOSITORY_REDIS: "redis:alpine"
  GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        run: |
          docker build -t $ECR_REGISTRY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY:$IMAGE_TAG $ECR_REPOSITORY/$ECR_REGISTRY:$IMAGE_TAG
          docker push $ECR_REPOSITORY/$ECR_REGISTRY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition APP
        id: task-def-app
        uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME_APP }}
          image: $ECR_REPOSITORY/$ECR_REGISTRY:$IMAGE_TAG

      - name: Fill in the new image ID in the Amazon ECS task definition REDIS
        id: task-def-redis
        uses: aws-actions/amazon-ecs-render-task-definition@97587c9d45a4930bf0e3da8dd2feb2a463cf4a3a
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME_REDIS }}
          image: $ECR_REPOSITORY_REDIS
          
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_CHANNEL: web
          SLACK_COLOR: '#ff00ff'
          SLACK_ICON: https://github.com/rtCamp.png?size=48
          SLACK_MESSAGE: 'Post Content :rocket:'
          SLACK_TITLE: GitHub Action AtlassianAddon Stage
          SLACK_USERNAME: gulldemolins@fluendo.com
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

